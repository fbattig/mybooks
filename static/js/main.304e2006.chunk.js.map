{"version":3,"sources":["Components/BooksAPI.js","Components/Book.js","Components/BookShelf.js","Components/Home.js","Components/SearchPage.js","Components/BookDetails.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Book","_ref","bookId","shelf","bookCoverImage","bookTitle","bookAuthors","handleStatusUpdate","react_default","a","createElement","className","style","width","height","backgroundImage","concat","defaultValue","onChange","e","id","target","value","disabled","map","author","key","Link","to","defaultProps","BookShelf","bookShelfTitle","books","length","book","Components_Book","Object","assign","imageLinks","thumbnail","title","authors","Home","handleBookStatusUpdate","name","slug","bookShelf","Components_BookShelf","filter","SearchPage","state","searchedList","query","_this2","this","setState","fetch","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksAPI","searchedBooks","currentBooks","props","i","j","_this3","type","placeholder","handleSearchUpdate","rel","href","Component","BookDetails","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadBook","bind","assertThisInitialized","match","params","readOnly","subtitle","BooksApp","bookList","loadList","_this4","Route","path","render","Components_SearchPage","component","exact","Components_Home","React","ReactDOM","BrowserRouter","basename","process","App","document","getElementById"],"mappings":"sRACMA,EAAM,wCAERC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,WCHbS,EAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,MAAOC,EAAlBH,EAAkBG,eAAgBC,EAAlCJ,EAAkCI,UAAWC,EAA7CL,EAA6CK,YAAaC,EAA1DN,EAA0DM,mBAA1D,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAQ,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,QAAAC,OAAWZ,EAAX,SAC9EI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQO,aAAed,EAAQe,SAAW,SAACC,GAAQZ,EAAmB,CAAEa,GAAIlB,GAAUiB,EAAEE,OAAOC,SAC7Fd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,OAAOC,UAAQ,GAA7B,cACAf,EAAAC,EAAAC,cAAA,UAAQY,MAAM,oBAAd,qBACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,cAAd,gBACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,QAAd,QACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,QAAd,WAINd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcN,GAC7BG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBL,EAAYkB,IAAI,SAACC,GAAD,OAAYjB,EAAAC,EAAAC,cAAA,QAAMgB,IAAMD,GAAUA,EAAOjB,EAAAC,EAAAC,cAAA,eACxFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMhB,UAAU,OAAOiB,GAAE,YAAAZ,OAAcd,IAAvC,cAalCF,EAAK6B,aAAe,CAClB1B,MAAO,OACPC,eAAgB,GAChBC,UAAW,QACXC,YAAa,CAAC,eAGDN,QCpCT8B,EAAY,SAAA7B,GAAA,IAAG8B,EAAH9B,EAAG8B,eAAgBC,EAAnB/B,EAAmB+B,MAAOzB,EAA1BN,EAA0BM,mBAA1B,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBoB,GACjCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVqB,EAAMC,OAAS,GACVD,EAAMR,IAAI,SAAAU,GACX,OACE1B,EAAAC,EAAAC,cAAA,MAAIgB,IAAMQ,EAAKd,IACbZ,EAAAC,EAAAC,cAACyB,EAADC,OAAAC,OAAA,CACElC,MAAQ+B,EAAK/B,MACbD,OAASgC,EAAKd,GACdhB,eAAiB8B,EAAKI,WAAWC,UACjClC,UAAY6B,EAAKM,MACjBlC,YAAc4B,EAAKO,QACnBlC,mBAAqBA,GAChB2B,WAiBzBJ,EAAUD,aAAe,CACvBE,eAAgB,eAChBC,MAAO,IAGMF,QCvCTY,EAAO,SAAAzC,GAAuC,IAApC+B,EAAoC/B,EAApC+B,MAAOW,EAA6B1C,EAA7B0C,uBAerB,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAnBH,CACd,CACEiC,KAAM,oBACNC,KAAM,oBAER,CACED,KAAM,eACNC,KAAM,cAER,CACED,KAAM,OACNC,KAAM,SASKrB,IAAI,SAACsB,GAAD,OACVtC,EAAAC,EAAAC,cAACqC,EAAD,CACCrB,IAAMoB,EAAUD,KAChBd,eAAiBe,EAAUF,KAC3BZ,MAAQA,EAAMgB,OAAO,SAACd,GACpB,OAAOA,EAAK/B,QAAU2C,EAAUD,OAElCtC,mBAAqBoC,OAK3BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,WAAT,iBAWRc,EAAKb,aAAe,CAClBG,MAAO,IAGMU,QC/CTO,6MAUJC,MAAQ,CACNC,aAAc,GACdC,MAAO,sFAGUjC,GAAG,IAAAkC,EAAAC,KACdF,EAAQjC,EAAEE,OAAOC,MACvBgC,KAAKC,SAAS,CACZH,UJMgB,SAACA,GAAD,OACpBI,MAAK,GAAAxC,OAAI1B,EAAJ,WAAkB,CACrBmE,OAAQ,OACR5D,QAAQuC,OAAAsB,EAAA,EAAAtB,CAAA,GACHvC,EADE,CAEL8D,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKlC,QIbnBmC,CAAgBf,GAAWW,KAAK,SAAC/B,GAI/B,IAHA,IAAMoC,EAAyB,MAATpC,EAAgB,EAAIA,EACpCqC,EAAehB,EAAKiB,MAAMtC,MAEvBuC,EAAI,EAAGA,EAAIH,EAAcnC,OAAQsC,IACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAapC,OAAQuC,IAAK,CAC5C,GAAIJ,EAAcG,GAAGnD,KAAOiD,EAAaG,GAAGpD,GAAI,CAC9CgD,EAAcG,GAAGpE,MAAQkE,EAAaG,GAAGrE,MACzC,MAEAiE,EAAcG,GAAGpE,MAAQ,OAK/BkD,EAAKE,SAAS,CAAEJ,aAAciB,uCAIzB,IAAAK,EAAAnB,KACP,OAGE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMhB,UAAU,eAAeiB,GAAG,KAAlC,QACApB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SACEgE,KAAK,OACL9B,KAAK,aACL+B,YAAY,4BACZzD,SAAW,SAACC,GAAQsD,EAAKG,mBAAmBzD,IAC5CG,MAAQgC,KAAKJ,MAAME,UAKzB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAAb,qJAGDH,EAAAC,EAAAC,cAAA,KAAGW,OAAO,SAASwD,IAAI,sBACpBC,KAAK,4EADR,oBAOGtE,EAAAC,EAAAC,cAACqC,EAAD,CACEhB,eAAe,iBACfC,MAAQsB,KAAKJ,MAAMC,aACnB5C,mBAAqB+C,KAAKgB,MAAM3B,yBAElCnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBA1ECoE,aAAnB9B,EAMGpB,aAAe,CACpBG,MAAO,IA0EIiB,QCvBA+B,cA3Db,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAAkB,KAAA0B,IACjBC,EAAA7C,OAAA+C,EAAA,EAAA/C,CAAAkB,KAAAlB,OAAAgD,EAAA,EAAAhD,CAAA4C,GAAAK,KAAA/B,KAAMgB,KAIRpB,MAAQ,CACNhB,KAAM,MAJN+C,EAAKK,SAAWL,EAAKK,SAASC,KAAdnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA6C,KAFCA,mFAUjB3B,KAAKgC,SAAShC,KAAKgB,MAAMmB,MAAMC,OAAOxF,yCAG/BkB,GAAI,ILRKlB,EKQLmD,EAAAC,MLRKpD,EKUHkB,ELTfoC,MAAK,GAAAxC,OAAI1B,EAAJ,WAAA0B,OAAiBd,GAAU,CAAEL,YAC/BkE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKhC,QKOF6B,KAAK,SAAC7B,GAAD,OAAUmB,EAAKE,SAAS,CAAErB,4CAGzC,IACCA,EAASoB,KAAKJ,MAAdhB,KACR,OAAKA,EAIH1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMhB,UAAU,eAAeiB,GAAG,KAAlC,SACApB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SACEgE,KAAK,OACL9B,KAAK,aACLtB,MAAQY,EAAKM,MACbmD,UAAW,MAKjBnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAQ,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,QAAAC,OAAWkB,EAAKI,WAAWC,UAA3B,UAEhF/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuB,EAAKM,OAClChC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBuB,EAAKO,QAAQjB,IAAI,SAACC,GAAD,OAAYjB,EAAAC,EAAAC,cAAA,QAAMgB,IAAMD,GAAUA,EAAOjB,EAAAC,EAAAC,cAAA,eACzFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAiBuB,EAAK0D,gBA3B1CpF,EAAAC,EAAAC,cAAA,gCAtBaqE,aC+DXc,cA3Db,SAAAA,EAAYvB,GAAO,IAAAW,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAAkB,KAAAuC,IACjBZ,EAAA7C,OAAA+C,EAAA,EAAA/C,CAAAkB,KAAAlB,OAAAgD,EAAA,EAAAhD,CAAAyD,GAAAR,KAAA/B,KAAMgB,KAKRpB,MAAQ,CACN4C,SAAU,IALVb,EAAKc,SAAWd,EAAKc,SAASR,KAAdnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA6C,KAChBA,EAAKtC,uBAAyBsC,EAAKtC,uBAAuB4C,KAA5BnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA6C,KAHbA,mFAWjB3B,KAAKyC,8CAGI,IAAA1C,EAAAC,KNNXE,MAAK,GAAAxC,OAAI1B,EAAJ,UAAiB,CAAEO,YACrBkE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKlC,QMKD+B,KAAK,SAAC/B,GAAD,OAAWqB,EAAKE,SAAS,CAAEuC,SAAU9D,qDAGvCE,EAAM/B,GAAO,IAAAsE,EAAAnB,MNNhB,SAACpB,EAAM/B,GAAP,OACpBqD,MAAK,GAAAxC,OAAI1B,EAAJ,WAAA0B,OAAiBkB,EAAKd,IAAM,CAC/BqC,OAAQ,MACR5D,QAAQuC,OAAAsB,EAAA,EAAAtB,CAAA,GACHvC,EADE,CAEL8D,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE3D,YACtB4D,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UMDjBE,CAAgBjC,EAAM/B,GAAO4D,KAAK,SAACC,GAAD,OAASA,GAAOS,EAAKsB,8CAIhD,IAAAC,EAAA1C,KACP,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACEC,KAAK,UACLC,OAAS,kBACP3F,EAAAC,EAAAC,cAAC0F,EAAD,CACEzD,uBAAyBqD,EAAKrD,uBAC9BX,MAAQgE,EAAK9C,MAAM4C,cAMzBtF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACEC,KAAK,mBACLG,UAAWrB,IAIbxE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACEC,KAAK,IACLI,OAAQ,EACRH,OAAS,kBACP3F,EAAAC,EAAAC,cAAC6F,EAAD,CACE5D,uBAAyBqD,EAAKrD,uBAC9BX,MAAQgE,EAAK9C,MAAM4C,sBAnDVU,IAAMzB,uBCF7B0B,IAASN,OACP3F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeC,SAAUC,YACvBpG,EAAAC,EAAAC,cAACmG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.304e2006.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Book = ({ bookId, shelf, bookCoverImage, bookTitle, bookAuthors, handleStatusUpdate }) => (\n  <div className='book'>\n    <div className='book-top'>\n      <div className='book-cover' style={ { width: 128, height: 193, backgroundImage: `url(\"${ bookCoverImage }\")` } } />\n      <div className='book-shelf-changer'>\n        <select defaultValue={ shelf } onChange={ (e) => { handleStatusUpdate({ id: bookId }, e.target.value); } }>\n          <option value='none' disabled>Move to...</option>\n          <option value='currentlyReading'>Currently Reading</option>\n          <option value='wantToRead'>Want to Read</option>\n          <option value='read'>Read</option>\n          <option value='none'>None</option>\n        </select>\n      </div>\n    </div>\n    <div className='book-title'>{bookTitle}</div>\n    <div className='book-authors'>{bookAuthors.map((author) => <span key={ author }>{author}<br /></span>)}</div>\n    <div className='book-authors'><Link className='more' to={`/details/${bookId}`}>More...</Link></div>\n  </div>\n);\n\nBook.propTypes = {\n  bookId: PropTypes.string.isRequired,\n  shelf: PropTypes.string,\n  bookCoverImage: PropTypes.string,\n  bookTitle: PropTypes.string,\n  bookAuthors: PropTypes.array,\n  handleStatusUpdate: PropTypes.func.isRequired,\n};\n\nBook.defaultProps = {\n  shelf: 'none',\n  bookCoverImage: '',\n  bookTitle: 'Title',\n  bookAuthors: ['No Authors'],\n};\n\nexport default Book;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Book from './Book';\n\n\nconst BookShelf = ({ bookShelfTitle, books, handleStatusUpdate }) => (\n  <div className='bookshelf'>\n    <h2 className='bookshelf-title'>{bookShelfTitle}</h2>\n    <div className='bookshelf-books'>\n      <ol className='books-grid'>\n        {\n          books.length > 0\n            && books.map(book => {\n              return (\n                <li key={ book.id }>\n                  <Book\n                    shelf={ book.shelf }\n                    bookId={ book.id }\n                    bookCoverImage={ book.imageLinks.thumbnail }\n                    bookTitle={ book.title }\n                    bookAuthors={ book.authors }\n                    handleStatusUpdate={ handleStatusUpdate }\n                    { ...book }\n                  />\n                </li>\n              );\n            })\n        }\n      </ol>\n    </div>\n  </div>\n);\n\nBookShelf.propTypes = {\n  bookShelfTitle: PropTypes.string,\n  books: PropTypes.array,\n  handleStatusUpdate: PropTypes.func.isRequired,\n};\n\nBookShelf.defaultProps = {\n  bookShelfTitle: 'No title set',\n  books: [],\n};\n\nexport default BookShelf;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport BookShelf from './BookShelf';\n\nconst Home = ({ books, handleBookStatusUpdate }) => {\n  const shelves = [\n    {\n      name: 'Currently Reading',\n      slug: 'currentlyReading',\n    },\n    {\n      name: 'Want to Read',\n      slug: 'wantToRead',\n    },\n    {\n      name: 'Read',\n      slug: 'read',\n    },\n  ];\n  return (\n    <div className='list-books'>\n      <div className='list-books-title'>\n        <h1>MyReads app</h1>\n      </div>\n      <div className='list-books-content'>\n        {shelves.map((bookShelf) =>\n          (<BookShelf\n            key={ bookShelf.slug }\n            bookShelfTitle={ bookShelf.name }\n            books={ books.filter((book) => {\n              return book.shelf === bookShelf.slug;\n            }) }\n            handleStatusUpdate={ handleBookStatusUpdate }\n          />)\n        )}\n      </div>\n\n      <div className='open-search'>\n        <Link to='/search'>Add a book</Link>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  books: PropTypes.array,\n  handleBookStatusUpdate: PropTypes.func.isRequired,\n};\n\nHome.defaultProps = {\n  books: [],\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport * as BooksAPI from './BooksAPI';\n\nimport BookShelf from './BookShelf';\n\nclass SearchPage extends Component {\n  static propTypes = {\n    books: PropTypes.array,\n    handleBookStatusUpdate: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    books: [],\n  }\n\n  state = {\n    searchedList: [],\n    query: '',\n  }\n\n  handleSearchUpdate(e) {\n    const query = e.target.value;\n    this.setState({\n      query,\n    });\n    BooksAPI.search(query, 20).then((books) => {\n      const searchedBooks = books == null ? 0 : books;\n      const currentBooks = this.props.books;\n\n      for (let i = 0; i < searchedBooks.length; i++) {\n        for (let j = 0; j < currentBooks.length; j++) {\n          if (searchedBooks[i].id === currentBooks[j].id) {\n            searchedBooks[i].shelf = currentBooks[j].shelf;\n            break;\n          } else {\n            searchedBooks[i].shelf = 'none';\n          }\n        }\n      }\n\n      this.setState({ searchedList: searchedBooks });\n    });\n  }\n\n  render() {\n    return (\n\n     \n      <div className='search-books'>\n        <div className='search-books-bar'>\n          <Link className='close-search' to='/'>Back</Link>\n          <div className='search-books-input-wrapper'>\n            <input\n              type='text'\n              name='searchTerm'\n              placeholder='Search by title or author'\n              onChange={ (e) => { this.handleSearchUpdate(e); } }\n              value={ this.state.query }\n            />\n          </div>\n        </div>\n\n        <div className='search-books-results'>\n       \n        <p className=\"important-note search-note\">\n\t\t\t\t\t\t\tImportant: The backend API uses a fixed set of cached search results and is limited to a\n\t\t\t\t\t\t\tparticular set of search terms, which can be found in&nbsp;\n\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t   href=\"https://github.com/computationalcore/myreads/blob/master/SEARCH_TERMS.md\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSEARCH_TERMS.md\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>        \n\n          <BookShelf\n            bookShelfTitle='Search Results'\n            books={ this.state.searchedList }\n            handleStatusUpdate={ this.props.handleBookStatusUpdate }\n          />\n          <ol className='books-grid' />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as BooksAPI from './BooksAPI';\n\n\nclass BookDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.loadBook = this.loadBook.bind(this);\n  }\n\n  state = {\n    book: null,\n  }\n\n  componentDidMount() {\n    this.loadBook(this.props.match.params.bookId);\n  }\n\n  loadBook(id) {\n    \n    BooksAPI.get(id).then((book) => this.setState({ book }));\n  }\n\n  render() {\n    const { book } = this.state;\n    if (!book) {\n      return <p>Loading book</p>;\n    }\n    return (\n      <div className='search-books'>\n        <div className='search-books-bar'>\n          <Link className='close-search' to='/'>Close</Link>\n          <div className='search-books-input-wrapper'>\n            <input\n              type='text'\n              name='searchTerm'\n              value={ book.title }\n              readOnly={ true }\n            />\n\n          </div>\n        </div>\n        <div className='bookshelf'>\n          <h2 className='bookshelf-title'>&nbsp;</h2>\n          <div className='bookshelf-books'>\n            <ol className='books-grid'>\n              <li>\n                <div className='book'>\n                  <div className='book-top'>\n                    <div className='book-cover' style={ { width: 128, height: 193, backgroundImage: `url(\"${ book.imageLinks.thumbnail }\")` } } />\n                  </div>\n                  <div className='book-title'>{book.title}</div>\n                  <div className='book-authors'>{book.authors.map((author) => <span key={ author }>{author}<br /></span>)}</div>\n                  <div className='book-authors'>{ book.subtitle }</div>\n                </div>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookDetails;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport * as BooksAPI from './Components/BooksAPI';\n\nimport Home from './Components/Home';\nimport SearchPage from './Components/SearchPage';\nimport BookDetails from './Components/BookDetails';\n\nclass BooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadList = this.loadList.bind(this);\n    this.handleBookStatusUpdate = this.handleBookStatusUpdate.bind(this);\n  }\n\n  state = {\n    bookList: [],\n  }\n\n  componentDidMount() {\n    this.loadList();\n  }\n\n  loadList() {\n    BooksAPI.getAll().then((books) => this.setState({ bookList: books }));\n  }\n\n  handleBookStatusUpdate(book, shelf) {\n    BooksAPI.update(book, shelf).then((res) => res && this.loadList()\n  );\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        {/* Search Route */}\n        <Route\n          path='/search'\n          render={ () => (\n            <SearchPage\n              handleBookStatusUpdate={ this.handleBookStatusUpdate }\n              books={ this.state.bookList }\n            />\n        ) }\n        />\n\n        {/* Book Details Route */}\n        <Route\n          path='/details/:bookId'\n          component={BookDetails}\n        />\n\n        {/* Home Page Route */}\n        <Route\n          path='/'\n          exact={ true }\n          render={ () => (\n            <Home\n              handleBookStatusUpdate={ this.handleBookStatusUpdate }\n              books={ this.state.bookList }\n            />\n        ) }\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport './App.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}